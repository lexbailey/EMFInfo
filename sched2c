#!/usr/bin/env python3

# Program that is run at build time to extract information from the schedule.json
# file and generate metadata about it to include in C code, and to generate binary
# files with the compressed schedule data in it

import json
from datetime import datetime

j = json.loads(open('schedule.json').read())

print(j[0])

inc = open('schedule.h', 'w+')

n_events = len(j)

def parsedate(d):
    return datetime.strptime(d, '%Y-%m-%d %H:%M:%S')

def starttime(j):
    return parsedate(j.get('start_date'))

def endtime(j):
    return parsedate(j.get('end_date'))

class EvList:

    def __init__(self, j):
        self.pronouns_list = []
        self.venue_list = []
        self.type_list = []
        self.earliest = None
        self.latest = None
        self.evs = []
        
        for ev in j:
            if 'pronouns' in ev:
                p = ev.get('pronouns')
                if p not in self.pronouns_list:
                    self.pronouns_list.append(p)
            if 'venue' in ev:
                p = ev.get('venue')
                if p not in self.venue_list:
                    self.venue_list.append(p)
            if 'type' in ev:
                p = ev.get('type')
                if p not in self.type_list:
                    self.type_list.append(p)
            start = starttime(ev)
            end = endtime(ev)
            if self.earliest is None or start < self.earliest:
                self.earliest = start
            if self.latest is None or end > self.latest:
                self.latest = end

        print(len(self.pronouns_list))
        print(len(self.venue_list))
        print(len(self.type_list))

    
        

evs = EvList(j)

inc.write(f'#ifndef SCHEDULE_H_INCLUDE\n')
inc.write(f'#define SCHEDULE_H_INCLUDE\n')

inc.write(f'#define SCHED_N_EVENTS ({n_events})\n')

inc.write(f'#endif /*SCHEDULE_H_INCLUDE*/\n')
